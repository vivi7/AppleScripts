#!/usr/bin/env python
# -*- coding: latin-1 -*-

import Process

import gtk
import os
import sys
import string

def ClickAceptar(widget):

	orFile = ""

	if radOrJPG.get_active() == True:
		orFile = "jpg"
	if radOrPNG.get_active() == True:
		orFile = "png"
	if radOrBMP.get_active() == True:
		orFile = "bmp"
	if radOrGIF.get_active() == True:
		orFile = "gif"
	if radOrTIF.get_active() == True:
		orFile = "tiff"
	if radOrTGA.get_active() == True:
		orFile = "tga"
	if radOrICO.get_active() == True:
		orFile = "ico"
	if radOrXPM.get_active() == True:
		orFile = "xpm"

		
	destFile = ""

	if radDestJPG.get_active() == True:
		destFile = "jpg"
	if radDestPNG.get_active() == True:
		destFile = "png"
	if radDestBMP.get_active() == True:
		destFile = "bmp"
	if radDestGIF.get_active() == True:
		destFile = "gif"
	if radDestTIF.get_active() == True:
		destFile = "tiff"
	if radDestTGA.get_active() == True:
		destFile = "tga"
	if radDestXPM.get_active() == True:
		destFile = "xpm"


	Process.ProcessFiles(
		"convert $FILE$ $NAME$."+destFile, # comando a ejecutar
		orFile, # tipo de archivos
		True, # leer directorios?
		False, # procesar directorio como un archivo
		"") # mensaje final

	if cbRm.get_active()==True:
		Process.ProcessFiles(
			"rm $FILE$", # comando a ejecutar
			orFile, # tipo de archivos
			True, # leer directorios?
			False, # procesar directorio como un archivo
			"") # mensaje final

	gtk.main_quit()

def ClickCancelar(widget):
	gtk.main_quit()

# PROGRAMA

if Process.verifyCommands("convert%ImageMagick")==False:
	sys.exit()

w = gtk.Window(gtk.WINDOW_TOPLEVEL)
w.set_title("Convertire immagini")
w.set_border_width(20)

w.connect("destroy", gtk.mainquit) 

# tabla de la miniatura

tableMin = gtk.Table(2, 1, False)
tableMin.set_border_width(10)

tableMin.set_row_spacings(12)
tableMin.set_col_spacings(34)

lOr = gtk.Label("File Origine:")

tableMin.attach(lOr, 0, 1, 0, 1)

lDest = gtk.Label("File Destinazione:")

tableMin.attach(lDest, 1, 2, 0, 1)


boxOr = gtk.VBox(True, 8)

radOrJPG = gtk.RadioButton(None, "JPG")
radOrJPG.set_active(True)
boxOr.pack_start(radOrJPG, False, False, 0)

radOrPNG= gtk.RadioButton(radOrJPG, "PNG")
boxOr.pack_start(radOrPNG, False, False, 0)

radOrBMP= gtk.RadioButton(radOrJPG, "BMP")
boxOr.pack_start(radOrBMP, False, False, 0)

radOrGIF= gtk.RadioButton(radOrJPG, "GIF")
boxOr.pack_start(radOrGIF, False, False, 0)

radOrTIF= gtk.RadioButton(radOrJPG, "TIFF")
boxOr.pack_start(radOrTIF, False, False, 0)

radOrTGA= gtk.RadioButton(radOrJPG, "TGA")
boxOr.pack_start(radOrTGA, False, False, 0)

radOrICO= gtk.RadioButton(radOrJPG, "ICO")
boxOr.pack_start(radOrICO, False, False, 0)

radOrXPM= gtk.RadioButton(radOrJPG, "XPM")
boxOr.pack_start(radOrXPM, False, False, 0)

tableMin.attach(boxOr, 0, 1, 1, 2)

boxDest = gtk.VBox(True, 7)

radDestJPG = gtk.RadioButton(None, "JPG")
boxDest.pack_start(radDestJPG, False, False, 0)

radDestPNG= gtk.RadioButton(radDestJPG, "PNG")
radDestPNG.set_active(True)
boxDest.pack_start(radDestPNG, False, False, 0)

radDestBMP= gtk.RadioButton(radDestJPG, "BMP")
boxDest.pack_start(radDestBMP, False, False, 0)

radDestGIF= gtk.RadioButton(radDestJPG, "GIF")
boxDest.pack_start(radDestGIF, False, False, 0)

radDestTIF= gtk.RadioButton(radDestJPG, "TIFF")
boxDest.pack_start(radDestTIF, False, False, 0)

radDestTGA= gtk.RadioButton(radDestJPG, "TGA")
boxDest.pack_start(radDestTGA, False, False, 0)

radDestXPM= gtk.RadioButton(radDestJPG, "XPM")
boxDest.pack_start(radDestXPM, False, False, 0)

tableMin.attach(boxDest, 1, 2, 1, 2)


cbRm = gtk.CheckButton("Eliminare il file Origine")

tableMin.attach(cbRm, 0, 2, 2, 3)

# botones

aligBotones = gtk.Alignment(1.0, 0.0)
boxBotones = gtk.HBox(True, 4)

bAceptar = gtk.Button("Accettare", gtk.STOCK_OK)

bAceptar.connect("clicked", ClickAceptar)

boxBotones.pack_start(bAceptar, False, False, 0)

bCancelar = gtk.Button("Annullare", gtk.STOCK_CANCEL)

bCancelar.connect("clicked", ClickCancelar)

boxBotones.pack_start(bCancelar, False, False, 0)

aligBotones.add(boxBotones)

tableMin.attach(aligBotones, 0, 2, 3, 4)

w.add(tableMin)
w.show_all()
gtk.main()
